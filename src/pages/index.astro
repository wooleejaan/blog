---
import BaseHead from '../libs/blog/BaseHead.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts'
import PageLayoutWithHeader from '../libs/shared/components/PageLayoutWithHeader/PageLayoutWithHeader'
import PageSection from '../libs/shared/components/PageSection/PageSection'
import { getCollection } from 'astro:content'
import FormattedDate from '../libs/blog/FormattedDate.astro'

const { pathname } = Astro.url
const subpath = pathname.match(/[^\/]+/g)
const baseHref = '/'
const isHome = baseHref === pathname || baseHref === '/' + subpath?.[0]

const posts = (await getCollection('post')).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
)

const notes = (await getCollection('note')).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
)

const collections = (await getCollection('collection')).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
)

if (!posts || !notes || !collections) {
  return Astro.redirect('/404')
}
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style lang="scss">
      @import 'src/styles/utils';

      .hero {
        color: $color-gray05;

        & .link {
          text-decoration: underline;

          &:hover {
            color: $color-gray04;
          }
        }
      }

      .list {
        width: 100%;
        display: flex;
        flex-direction: column;
        margin-top: 48px;
      }

      .listTitle {
        font-size: 16px;
        font-weight: 400;
        margin-bottom: 24px;
        color: $color-gray05;
      }

      .item {
        width: 100%;
        display: flex;
        align-items: center;
        gap: 12px;
        background-color: transparent;
        padding: 12px 0px;

        border-top: 1px solid $color-gray01-30;

        &:last-of-type {
          border-bottom: 1px solid $color-gray01-30;
        }
      }

      .title {
        font-size: 14px;
        font-weight: 400;
        position: relative;
        color: $color-gray05;
        text-decoration: underline;

        &:hover {
          transition: color 0.3s;
          color: $color-gray04;
        }
      }

      .date {
        font-size: 12px;
        font-weight: 400;
        color: $color-gray02;
      }
    </style>
  </head>
  <body>
    <PageLayoutWithHeader title="yongwoo" client:idle isHomePage={isHome}>
      <PageSection disableTitleMarginBottom>
        <div class="hero">
          <span>
            Hi, I'm{' '}
            <a
              href="https://github.com/wooleejaan"
              target="_blank"
              class="link"
            >
              Yongwoo,</a
            >
            a software engineer based in Seoul, South Korea. I'm currently developing{
              ' '
            }
            <a href="https://www.prix.im/" target="_blank" class="link">
              Prix{' '}
            </a>
            full-time. Here, I write about things I learn and find interesting. <a
              class="link"
              href="/about">(...more)</a
            >
          </span>
        </div>
        <div class="list">
          <h3 class="listTitle">posts</h3>
          {
            posts.map((post) => (
              <div class="item">
                <span class="date">
                  <FormattedDate date={post.data.pubDate} />
                </span>
                <a href={`/post/${post.slug}`} class="title">
                  {post.data.title}
                </a>
              </div>
            ))
          }
        </div>
        <div class="list">
          <h3 class="listTitle">scribbled notes</h3>
          {
            notes.map((post) => (
              <div class="item">
                <span class="date">
                  <FormattedDate date={post.data.pubDate} />
                </span>
                <a href={`/note/${post.slug}`} class="title">
                  {post.data.title}
                </a>
              </div>
            ))
          }
        </div>
        <div class="list">
          <h3 class="listTitle">collections</h3>
          {
            collections.map((post) => (
              <div class="item">
                <span class="date">
                  <FormattedDate date={post.data.pubDate} />
                </span>
                <a href={`/collection/${post.slug}`} class="title">
                  {post.data.title}
                </a>
              </div>
            ))
          }
        </div>
      </PageSection>
    </PageLayoutWithHeader>
  </body>
</html>
